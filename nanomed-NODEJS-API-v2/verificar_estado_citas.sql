-- ==========================================
-- SCRIPT DE VERIFICACI√ìN R√ÅPIDA DEL ESTADO DE CITAS
-- ==========================================
-- Descripci√≥n: Muestra estad√≠sticas completas del sistema de citas
-- Uso: Ejecutar ANTES de cualquier operaci√≥n de eliminaci√≥n

PRINT '=== VERIFICACI√ìN DEL ESTADO ACTUAL DEL SISTEMA ===';
PRINT 'Fecha y hora: ' + CONVERT(VARCHAR(19), GETDATE(), 120);
PRINT '';

-- ==========================================
-- ESTAD√çSTICAS GENERALES
-- ==========================================

PRINT '=== ESTAD√çSTICAS GENERALES ===';

SELECT 
    'Total de citas en el sistema' as descripcion,
    COUNT(*) as cantidad,
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ Sistema limpio'
        WHEN COUNT(*) < 10 THEN '‚ö†Ô∏è Pocas citas'
        WHEN COUNT(*) < 100 THEN 'üìä Cantidad normal'
        ELSE 'üìà Muchas citas'
    END as estado
FROM CitasMedicas
UNION ALL
SELECT 
    'Total de usuarios',
    COUNT(*),
    CASE WHEN COUNT(*) > 0 THEN '‚úÖ Usuarios activos' ELSE '‚ùå Sin usuarios' END
FROM Usuarios
UNION ALL
SELECT 
    'Total de m√©dicos',
    COUNT(*),
    CASE WHEN COUNT(*) > 0 THEN '‚úÖ M√©dicos disponibles' ELSE '‚ùå Sin m√©dicos' END
FROM Usuarios WHERE role IN ('doctor', 'medico')
UNION ALL
SELECT 
    'Bloques de disponibilidad',
    COUNT(*),
    CASE WHEN COUNT(*) > 0 THEN '‚úÖ Bloques configurados' ELSE '‚ö†Ô∏è Sin bloques' END
FROM BloquesDisponibilidad;

-- ==========================================
-- DISTRIBUCI√ìN DE CITAS POR ESTADO
-- ==========================================

PRINT '';
PRINT '=== DISTRIBUCI√ìN DE CITAS POR ESTADO ===';

IF EXISTS (SELECT 1 FROM CitasMedicas)
BEGIN
    SELECT 
        ISNULL(estado, 'NULL') as estado,
        COUNT(*) as cantidad,
        CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM CitasMedicas) AS DECIMAL(5,2)) as porcentaje,
        CASE 
            WHEN estado = 'programada' THEN 'üìÖ Programadas'
            WHEN estado = 'confirmada' THEN '‚úÖ Confirmadas'
            WHEN estado = 'completada' THEN '‚úîÔ∏è Completadas'
            WHEN estado = 'cancelada' THEN '‚ùå Canceladas'
            ELSE '‚ùì Estado desconocido'
        END as descripcion_estado
    FROM CitasMedicas
    GROUP BY estado
    ORDER BY cantidad DESC;
END
ELSE
BEGIN
    PRINT '‚úÖ No hay citas en el sistema';
END

-- ==========================================
-- CITAS POR FECHA
-- ==========================================

PRINT '';
PRINT '=== DISTRIBUCI√ìN DE CITAS POR FECHA ===';

IF EXISTS (SELECT 1 FROM CitasMedicas)
BEGIN
    SELECT 
        CAST(fecha_hora AS DATE) as fecha,
        COUNT(*) as citas_del_dia,
        MIN(fecha_hora) as primera_cita,
        MAX(fecha_hora) as ultima_cita
    FROM CitasMedicas
    GROUP BY CAST(fecha_hora AS DATE)
    ORDER BY fecha DESC;
END
ELSE
BEGIN
    PRINT '‚úÖ No hay citas programadas';
END

-- ==========================================
-- RELACIONES Y DEPENDENCIAS
-- ==========================================

PRINT '';
PRINT '=== RELACIONES Y DEPENDENCIAS ===';

SELECT 
    'Bloques vinculados a citas' as descripcion,
    COUNT(*) as cantidad,
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ Ning√∫n bloque vinculado'
        ELSE '‚ö†Ô∏è Bloques que se desvincular√°n'
    END as impacto
FROM BloquesDisponibilidad 
WHERE cita_id IS NOT NULL
UNION ALL
SELECT 
    'Notificaciones de citas',
    COUNT(*),
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ Sin notificaciones pendientes'
        ELSE '‚ö†Ô∏è Notificaciones que se eliminar√°n'
    END
FROM Notificaciones 
WHERE referencia_tipo = 'cita'
UNION ALL
SELECT 
    'Ex√°menes m√©dicos totales',
    COUNT(*),
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ Sin ex√°menes'
        ELSE '‚ÑπÔ∏è Se mantendr√°n (no relacionados directamente)'
    END
FROM ExamenesMedicos;

-- ==========================================
-- √öLTIMAS ACTIVIDADES
-- ==========================================

PRINT '';
PRINT '=== √öLTIMAS ACTIVIDADES ===';

IF EXISTS (SELECT 1 FROM CitasMedicas)
BEGIN
    PRINT '--- √öltimas 5 citas creadas ---';
    SELECT TOP 5
        id,
        usuario_id,
        medico_id,
        fecha_hora,
        estado,
        DATEDIFF(day, creado_en, GETDATE()) as dias_desde_creacion
    FROM CitasMedicas
    ORDER BY creado_en DESC;

    PRINT '';
    PRINT '--- Pr√≥ximas 5 citas programadas ---';
    SELECT TOP 5
        id,
        usuario_id,
        medico_id,
        fecha_hora,
        estado,
        DATEDIFF(day, GETDATE(), fecha_hora) as dias_hasta_cita
    FROM CitasMedicas
    WHERE fecha_hora >= GETDATE()
    ORDER BY fecha_hora ASC;
END
ELSE
BEGIN
    PRINT '‚úÖ No hay actividad de citas para mostrar';
END

-- ==========================================
-- RECOMENDACIONES
-- ==========================================

PRINT '';
PRINT '=== RECOMENDACIONES ===';

DECLARE @totalCitas INT = (SELECT COUNT(*) FROM CitasMedicas);
DECLARE @citasFuturas INT = (SELECT COUNT(*) FROM CitasMedicas WHERE fecha_hora >= GETDATE());

IF @totalCitas = 0
BEGIN
    PRINT '‚úÖ El sistema ya est√° limpio - no necesita reset';
END
ELSE
BEGIN
    PRINT 'üìä IMPACTO DE LA ELIMINACI√ìN:';
    PRINT '   ‚Ä¢ Se eliminar√°n ' + CAST(@totalCitas AS VARCHAR(10)) + ' citas en total';
    IF @citasFuturas > 0
        PRINT '   ‚Ä¢ ‚ö†Ô∏è Se perder√°n ' + CAST(@citasFuturas AS VARCHAR(10)) + ' citas futuras';
    
    PRINT '';
    PRINT 'üîß SCRIPTS DISPONIBLES:';
    PRINT '   ‚Ä¢ reset_citas_simple.sql - Elimina solo citas (recomendado)';
    PRINT '   ‚Ä¢ reset_todas_las_citas.sql - Reset completo (m√°s agresivo)';
    
    PRINT '';
    PRINT '‚ö†Ô∏è IMPORTANTE:';
    PRINT '   ‚Ä¢ Hacer respaldo antes de ejecutar cualquier script';
    PRINT '   ‚Ä¢ Verificar que no hay citas importantes programadas';
    PRINT '   ‚Ä¢ Considerar notificar a usuarios sobre la limpieza';
END

PRINT '';
PRINT '=== FIN DE VERIFICACI√ìN ===';
PRINT 'Sistema verificado el: ' + CONVERT(VARCHAR(19), GETDATE(), 120); 